?CASMNodeTablePreparer
install(CASMPrePostProcessor)
library(CASMPrePostProcessor)
?CASMNodeTablePreparer
?CASMNodeTablePreparer
library(devtools)
install_github("CASMPrePostProcessor","rainfallnz")
install_github("rainfallnz/CASMPrePostProcessor")
library(CASMPrePostProcessor)
source('D:/Projects/LWP/CASMPrePostProcessor/R/ReachJunctionFinderByOrder.R')
if (!require(rgdal)) install.packages("rgdal"); library(rgdal)                #used for spatial processing
if (!require(rgeos)) install.packages("rgeos"); library(rgeos)                #used for spatial processing
if (!require(raster)) install.packages("raster"); library(raster)                #used for spatial processing
if (!require(leaflet)) install.packages("leaflet"); library(leaflet)                #used for spatial processing
if (!require(rmapshaper)) install.packages("rmapshaper"); library(rmapshaper)                #used for spatial processing
if (!require(devtools)) install.packages("devtools"); library(devtools)                #Needed to load libraries from github
if (!require(CASMPrePostProcessor)) install_github("rainfallnz/CASMPrePostProcessor"); library(CASMPrePostProcessor)                #Needed to load libraries from github
#Set the project directory
ProjectDirectory <- "D:\\Projects\\LWP\\SouthlandRegionalForumModelling"       #Tim Kerr's Windows Home laptop
#Set the data directory
DataDirectory     <- file.path(ProjectDirectory, "Data")
#Set the GIS directory
GISDataDirectory  <- file.path(DataDirectory,"GIS")
#REC data is available from the MfE data service. See https://data.mfe.govt.nz/layer/51826-river-environment-classification-manawatu-2010/ and https://data.mfe.govt.nz/layer/51847-river-environment-classification-watershed-manawatu-2010/
REC_rivers <- "ES_REC2_Riverlines"
#Or an REC3 version
#REC_rivers <- "ES_REC3_Riverlines"
#REC_Catchments <- "ESWaterShedsWithPlanClasses" #An ESRI polygon shape file with Environment Southland Plan Classses
REC_MeanFlowFile <- file.path(DataDirectory,"REC2MeanFlow.RData")  #This is an RData file
#OutletReachNamesFile <- "OutletReachNames.csv"
WaterQualityStationFile <- "WaterQualitySites" #An ESRI Point shape file
LakeSiteFile <- "LakeSites"  #An ESRI Point shape file
EstuarySiteFile <- "Estuaries.csv"
ExtraCASMNodeSiteFile <- "ExtraCASMNodes"  #An ESRI Point Shape File
RiverOutletsFile <- "RiverMouthSites" #An ESRI Point Shape File
MajorCatchmentsFile <- "FactsheetZoneAreas"   #An ESRI polygon shapefile
GroundwaterZonesFile <- "Environment_Southland_Groundwater_Management_Zones_RWP_2010" #An ESRI polygon shapefile
PhysiographicDataFile <- "Environment_Southland_Physiographic_Zones" #An ESRI polygon shapefile
WaterPlanClassificationFile <- "WaterPlanClassification" #An ESRI Shape file
WaterPlanClassificationRasterFile <- file.path(GISDataDirectory,"ES_PlanClassification.tif") #A raster file
#NZsegmentToWaterPlanClassLookUpTableFile <-  file.path(DataDirectory,"NZsegmentToWaterPlan.csv")
NZsegmentToWaterPlanClassLookUpTableFile <-  file.path(DataDirectory,"REC2WaterPlanV1.csv")
#REC data has been sourced from LWP data stores. It has cut down versions of the attribute names, e.g. nzsegment is nzsgmnt. Keep an eye on this when comparing to other data sources that may have the full RECV2 attribute names.
RECReachNetwork <- readOGR(dsn =file.path(GISDataDirectory,REC_rivers),
layer = REC_rivers, stringsAsFactors = FALSE)
source('D:/Projects/LWP/CASMPrePostProcessor/R/ReachJunctionFinderByOrder.R')
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 7)
source('D:/Projects/LWP/CASMPrePostProcessor/R/ReachJunctionFinderByOrder.R')
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 7)
plot(SubThresholdNetwork)
x11()
str(SubThresholdNetwork)
source('D:/Projects/LWP/CASMPrePostProcessor/R/ReachJunctionFinderByOrder.R')
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 7)
source('D:/Projects/LWP/CASMPrePostProcessor/R/ReachJunctionFinderByOrder.R')
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 7)
source('D:/Projects/LWP/CASMPrePostProcessor/R/ReachJunctionFinderByOrder.R')
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 7)
head(Test)
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test])
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,])
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],color = "red")
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],colour = "red")
?plot
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],col = "red")
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 6)
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],col = "red")
plot(RECReachNetwork)
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],col = "red",add=TRUE)
source('D:/Projects/LWP/CASMPrePostProcessor/R/ReachJunctionFinderByOrder.R')
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 7)
ReachOfInterest
SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest]
SubThresholdNetwork$From_NODE == SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest]
which(SubThresholdNetwork$From_NODE == SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest])
ReachOfInterest
which(SubThresholdNetwork$From_NODE == SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest])
which(SubThresholdNetwork$From_NODE == SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest])
which(SubThresholdNetwork$From_NODE == SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest])
which(SubThresholdNetwork$From_NODE == SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest])
which(SubThresholdNetwork$From_NODE == SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest])
which(SubThresholdNetwork$From_NODE == SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest])
which(SubThresholdNetwork$From_NODE == SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest])
which(SubThresholdNetwork$From_NODE == SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest])
head(SubThresholdNetwork$FROM_NODE)
View(SubThresholdNetwork)
which(SubThresholdNetwork$From_NODE == 53061)
which(SubThresholdNetwork$From_NODE == 530601)
str(SubThresholdNetwork)
which(SubThresholdNetwork$FROM_NODE == 530601)
which(SubThresholdNetwork$From_NODE == 530601)
source('D:/Projects/LWP/CASMPrePostProcessor/R/ReachJunctionFinderByOrder.R')
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 7)
which(SubThresholdNetwork$From_NODE == SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest])
SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest]
which(SubThresholdNetwork$FROM_NODE == SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest])
SubThresholdNetwork$FROM_NODE == SubThresholdNetwork$TO_NODE[SubThresholdNetwork$nzsegment == ReachOfInterest]
source('D:/Projects/LWP/CASMPrePostProcessor/R/ReachJunctionFinderByOrder.R')
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 7)
source('D:/Projects/LWP/CASMPrePostProcessor/R/ReachJunctionFinderByOrder.R')
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 7)
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],col = "red")
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 5)
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],col = "red")
source('D:/Projects/LWP/CASMPrePostProcessor/R/ReachJunctionFinderByOrder.R')
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 5)
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],col = "red")
plot(RECReachNetwork[RECReachNetwork$StreamOrde <= 5,])
plot(RECReachNetwork[RECReachNetwork$StreamOrde >= 5,])
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],col = "red")
plot(RECReachNetwork[RECReachNetwork$StreamOrde >= 5,])
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],col = "red", add=TRUE)
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],col = "red",lwd=2, add=TRUE)
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],col = "red",lwd=5, add=TRUE)
plot(RECReachNetwork)
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 5)
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],col = "red",lwd=5, add=TRUE)
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 4)
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],col = "red",lwd=5, add=TRUE)
Test <- ReachJunctionFinderByOrder(RECReachNetwork@data, OrderThreshold = 3)
plot(RECReachNetwork[RECReachNetwork$nzsegment %in% Test,],col = "red",lwd=5, add=TRUE)
